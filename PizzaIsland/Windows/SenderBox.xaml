<Window
  x:Class="PizzaIsland.Windows.SenderBox"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:ext="clr-namespace:PizzaIsland.Extensions"
  xmlns:local="clr-namespace:PizzaIsland.Windows"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:valRules="clr-namespace:PizzaIsland.Validations"
  xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
  Title="Skrzynka nadawcza"
  Icon="/PizzaIsland;component/Images/program_icon.png"
  SizeToContent="WidthAndHeight"
  WindowStartupLocation="CenterScreen"
  mc:Ignorable="d">

  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/PizzaIsland;component/Styles/Control.Styles.xaml" />
        <!-- ResourceDictionary Source="pack://application:,,,/PizzaIsland;component/Styles/Control.Styles.xaml" / -->
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>

  <Window.CommandBindings>
    <CommandBinding
      CanExecute="Save_CanExecute"
      Command="local:SenderBox.SaveCommand"
      Executed="Save_Executed" />
    <CommandBinding
      CanExecute="Test_CanExecute"
      Command="local:SenderBox.TestCommand"
      Executed="Test_Executed" />
  </Window.CommandBindings>

  <xctk:BusyIndicator x:Name="busyIndicator" IsBusy="False">
    <Grid
      Width="250"
      Height="330">

      <Grid.RowDefinitions>
        <RowDefinition Height="*" />
        <RowDefinition Height="50" />
      </Grid.RowDefinitions>

      <StackPanel
        Grid.Row="0"
        Width="200"
        Height="Auto"
        Margin="0,10,0,10">

        <TextBlock>Email(*)</TextBlock>
        <xctk:MaskedTextBox
          Style="{StaticResource ControlStyle}"
          Validation.ErrorTemplate="{StaticResource ControlErrorTemplate}">
          <TextBox.Text>
            <Binding
              Path="BoxInfo.FromEmail"
              UpdateSourceTrigger="PropertyChanged"
              ValidatesOnDataErrors="True"
              ValidatesOnExceptions="True">
              <Binding.ValidationRules>
                <valRules:EmptyStringValidationRule ValidationStep="CommittedValue" />
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </xctk:MaskedTextBox>

        <TextBlock>Wyświetlania nazwa w polu Od</TextBlock>
        <TextBox
          Style="{StaticResource ControlStyle}"
          Validation.ErrorTemplate="{StaticResource ControlErrorTemplate}">
          <TextBox.Text>
            <Binding
              Path="BoxInfo.DisplayName"
              UpdateSourceTrigger="PropertyChanged" />
          </TextBox.Text>
        </TextBox>

        <TextBlock>Użytkownik(*)</TextBlock>
        <TextBox
          Style="{StaticResource ControlStyle}"
          Validation.ErrorTemplate="{StaticResource ControlErrorTemplate}">
          <TextBox.Text>
            <Binding
              Mode="TwoWay"
              Path="BoxInfo.User"
              UpdateSourceTrigger="PropertyChanged"
              ValidatesOnDataErrors="True"
              ValidatesOnExceptions="True">
              <Binding.ValidationRules>
                <valRules:EmptyStringValidationRule ValidationStep="CommittedValue" />
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>

        <TextBlock>Hasło(*)</TextBlock>
        <PasswordBox
          x:Name="pwdBox"
          Style="{DynamicResource ControlStyle}" />

        <TextBlock>Serwer SMTP(*)</TextBlock>
        <TextBox
          Style="{StaticResource ControlStyle}"
          Validation.ErrorTemplate="{StaticResource ControlErrorTemplate}">
          <TextBox.Text>
            <Binding
              Path="BoxInfo.Smtp"
              UpdateSourceTrigger="PropertyChanged"
              ValidatesOnDataErrors="True"
              ValidatesOnExceptions="True">
              <Binding.ValidationRules>
                <valRules:EmptyStringValidationRule ValidationStep="CommittedValue" />
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>

        <TextBlock>Port(*)</TextBlock>
        <xctk:IntegerUpDown
          Minimum="0"
          Style="{StaticResource ControlStyle}"
          Validation.ErrorTemplate="{StaticResource ControlErrorTemplate}">
          <xctk:IntegerUpDown.Value>
            <Binding
              Path="BoxInfo.Port"
              UpdateSourceTrigger="PropertyChanged"
              ValidatesOnDataErrors="True"
              ValidatesOnExceptions="True">
              <Binding.ValidationRules>
                <valRules:ZeroValidationRule ValidationStep="CommittedValue" />
              </Binding.ValidationRules>
            </Binding>
          </xctk:IntegerUpDown.Value>

        </xctk:IntegerUpDown>

        <CheckBox Style="{StaticResource ControlStyle}">Zabezpieczenie SSL</CheckBox>
      </StackPanel>

      <StackPanel
        Grid.Row="1"
        Width="200">
        <StackPanel.Resources>
          <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0,0,0,5" />
          </Style>
        </StackPanel.Resources>
        <Button
          x:Name="btnSave"
          Command="{x:Static local:SenderBox.SaveCommand}"
          Content="Zapisz" />
        <Button
          x:Name="btnTest"
          Command="{x:Static local:SenderBox.TestCommand}"
          Content="Wiadomość testowa" />
      </StackPanel>
    </Grid>
  </xctk:BusyIndicator>
</Window>
